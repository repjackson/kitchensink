

template(name='docs')
    +doc_cloud
    .ui.container
        each docs
            +doc


template(name='doc')
    .ui.fluid.card
        if body
            .content
                |!{body}
        .content
            i.tags.icon
            each tags
                .ui.compact.small.button.doc_tag(class=doc_tag_class) #{this}
            [#{tag_count}]
        .content
            |by 
            .ui.small.compact.button.add_author_to_filter(class=add_author_to_filter_class) #{author.username} (#{author.points})
            | #{when}
        if currentUser
            .content
                if is_author
                    .ui.button.edit_doc
                        i.pencil.icon
                        | Edit
                .ui.button.clone_doc
                    i.fork.icon
                    |Clone
        if currentUser
            .content
                .ui.icon.button.vote_up(class=vote_up_button_class): i.thumbs.up.icon
                .ui.icon.button.vote_down(class=vote_down_button_class): i.thumbs.down.icon
                .ui.label Post Points #{points}
                .send_point.ui.button(class=send_point_button_class)
                    i.share.icon
                    |Send Point
                if can_retrieve_points
                    .retrieve_point.ui.button
                        i.reply.icon
                        |Retrieve Point
                        | (#{current_user_donations} sent)
        if show_comments
            +comments
        //     if currentUser
        //         unless isAuthor
        //             p Common interests with #{author.username} (Match Points: #{upVotedMatchCloud.totalCount})
        //             div
        //                 each upVotedMatchCloud.cloud
        //                     .ui.basic.label #{this.tag} #{this.min}
        // .extra.content
        //     .ui.button.findTopDocMatches Find Top Matches
        //     p #{_id}
        //     each topDocMatches
        //         p #{this.docId}
        //         p #{this.intersectionTags}
        // .extra.content
        //     .select_user.ui.button(class=select_user_button_class)
        //         i.user.icon
        //         |View Docs by #{author.username}
        //     |#{author.username}'s Authored Tags
        //     each author.authored_cloud
        //         .ui.small.label(class=cloud_label_class)
        //             |#{this.name}
        //             small #{this.count}
        // .extra.content
        //     .author_upvotes.ui.button(class=author_upvotes_button_class)
        //         i.thumbs.up.icon
        //         | View Upvoted Docs by #{author.username}
        //     |#{author.username}'s Upvoted Tags
        //     each author.upvoted_cloud
        //         .ui.small.label(class=cloud_label_class)
        //             |#{this.name}
        //             small #{this.count}
        // .extra.content
        //     .author_downvotes.ui.button(class=author_downvotes_button_class)
        //         i.thumbs.down.icon
        //         | View Downvoted Docs by #{author.username}
        //     |#{author.username}'s Downvoted Tags
        //     each author.downvoted_cloud
        //         .ui.small.label(class=cloud_label_class)
        //             |#{this.name}
        //             small #{this.count}